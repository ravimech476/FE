{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\FE\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on mount\n    const checkAuth = () => {\n      const currentUser = authService.getCurrentUser();\n      const token = localStorage.getItem('token');\n      if (currentUser && token) {\n        setUser(currentUser);\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await authService.login(credentials);\n      if (response.success) {\n        setUser(response.user);\n        return {\n          success: true,\n          user: response.user\n        };\n      }\n      return {\n        success: false,\n        error: response.error || 'Login failed'\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Login error:', err);\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Invalid username or password';\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n  };\n  const updateProfile = async userData => {\n    try {\n      const response = await authService.updateProfile(userData);\n      if (response.success) {\n        setUser(response.user);\n        return {\n          success: true,\n          user: response.user\n        };\n      }\n      return {\n        success: false,\n        error: response.error || 'Update failed'\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      const errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Update failed';\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    updateProfile,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin' || (user === null || user === void 0 ? void 0 : user.role) === 'Admin' || (user === null || user === void 0 ? void 0 : user.role) === '1'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkAuth","currentUser","getCurrentUser","token","localStorage","getItem","login","credentials","response","success","error","err","_err$response","_err$response$data","console","errorMessage","data","logout","updateProfile","userData","_err$response2","_err$response2$data","value","isAuthenticated","isAdmin","role","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/PROJECTS/FE/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport authService from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        // Check if user is logged in on mount\n        const checkAuth = () => {\n            const currentUser = authService.getCurrentUser();\n            const token = localStorage.getItem('token');\n            \n            if (currentUser && token) {\n                setUser(currentUser);\n            }\n            setLoading(false);\n        };\n        \n        checkAuth();\n    }, []);\n\n    const login = async (credentials) => {\n        try {\n            const response = await authService.login(credentials);\n            if (response.success) {\n                setUser(response.user);\n                return { success: true, user: response.user };\n            }\n            return { success: false, error: response.error || 'Login failed' };\n        } catch (err) {\n            console.error('Login error:', err);\n            const errorMessage = err.response?.data?.error || 'Invalid username or password';\n            return { success: false, error: errorMessage };\n        }\n    };\n\n    const logout = () => {\n        authService.logout();\n        setUser(null);\n    };\n\n    const updateProfile = async (userData) => {\n        try {\n            const response = await authService.updateProfile(userData);\n            if (response.success) {\n                setUser(response.user);\n                return { success: true, user: response.user };\n            }\n            return { success: false, error: response.error || 'Update failed' };\n        } catch (err) {\n            const errorMessage = err.response?.data?.error || 'Update failed';\n            return { success: false, error: errorMessage };\n        }\n    };\n\n    const value = {\n        user,\n        loading,\n        login,\n        logout,\n        updateProfile,\n        isAuthenticated: !!user,\n        isAdmin: user?.role === 'admin' || user?.role === 'Admin' || user?.role === '1'\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}