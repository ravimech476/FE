{"ast":null,"code":"import api, { API_BASE_URL } from './api';\nconst newsService = {\n  // Public - Get all active news\n  getAllNews: async () => {\n    try {\n      const response = await api.get('/news');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching news:', error);\n      throw error;\n    }\n  },\n  // Admin - Get all news (including inactive)\n  getAllNewsForAdmin: async () => {\n    try {\n      const response = await api.get('/news/admin/all');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching news for admin:', error);\n      throw error;\n    }\n  },\n  // Get single news\n  getNews: async id => {\n    try {\n      const response = await api.get(`/news/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching news:', error);\n      throw error;\n    }\n  },\n  // Admin - Create news with image\n  createNews: async newsData => {\n    try {\n      const formData = new FormData();\n      formData.append('title', newsData.title);\n      formData.append('content', newsData.content);\n      if (newsData.excerpt) {\n        formData.append('excerpt', newsData.excerpt);\n      }\n      if (newsData.category) {\n        formData.append('category', newsData.category);\n      }\n      if (newsData.display_order !== undefined) {\n        formData.append('display_order', newsData.display_order);\n      }\n      if (newsData.status) {\n        formData.append('status', newsData.status);\n      }\n      if (newsData.published_date) {\n        formData.append('published_date', newsData.published_date);\n      }\n      if (newsData.image) {\n        formData.append('image', newsData.image);\n      }\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${API_BASE_URL}/api/news`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to create news');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error creating news:', error);\n      throw error;\n    }\n  },\n  // Admin - Update news with image\n  updateNews: async (id, newsData) => {\n    try {\n      const formData = new FormData();\n      formData.append('title', newsData.title);\n      formData.append('content', newsData.content);\n      if (newsData.excerpt) {\n        formData.append('excerpt', newsData.excerpt);\n      }\n      if (newsData.category) {\n        formData.append('category', newsData.category);\n      }\n      if (newsData.display_order !== undefined) {\n        formData.append('display_order', newsData.display_order);\n      }\n      if (newsData.status) {\n        formData.append('status', newsData.status);\n      }\n      if (newsData.published_date) {\n        formData.append('published_date', newsData.published_date);\n      }\n      if (newsData.image) {\n        formData.append('image', newsData.image);\n      }\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${API_BASE_URL}/api/news/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to update news');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error updating news:', error);\n      throw error;\n    }\n  },\n  // Admin - Delete news\n  deleteNews: async id => {\n    try {\n      const response = await api.delete(`/news/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting news:', error);\n      throw error;\n    }\n  }\n};\nexport default newsService;","map":{"version":3,"names":["api","API_BASE_URL","newsService","getAllNews","response","get","data","error","console","getAllNewsForAdmin","getNews","id","createNews","newsData","formData","FormData","append","title","content","excerpt","category","display_order","undefined","status","published_date","image","token","localStorage","getItem","fetch","method","headers","body","ok","json","Error","updateNews","deleteNews","delete"],"sources":["D:/PROJECTS/FE/src/services/newsService.js"],"sourcesContent":["import api, { API_BASE_URL } from './api';\n\nconst newsService = {\n    // Public - Get all active news\n    getAllNews: async () => {\n        try {\n            const response = await api.get('/news');\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching news:', error);\n            throw error;\n        }\n    },\n\n    // Admin - Get all news (including inactive)\n    getAllNewsForAdmin: async () => {\n        try {\n            const response = await api.get('/news/admin/all');\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching news for admin:', error);\n            throw error;\n        }\n    },\n\n    // Get single news\n    getNews: async (id) => {\n        try {\n            const response = await api.get(`/news/${id}`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching news:', error);\n            throw error;\n        }\n    },\n\n    // Admin - Create news with image\n    createNews: async (newsData) => {\n        try {\n            const formData = new FormData();\n            formData.append('title', newsData.title);\n            formData.append('content', newsData.content);\n            \n            if (newsData.excerpt) {\n                formData.append('excerpt', newsData.excerpt);\n            }\n            \n            if (newsData.category) {\n                formData.append('category', newsData.category);\n            }\n            \n            if (newsData.display_order !== undefined) {\n                formData.append('display_order', newsData.display_order);\n            }\n            \n            if (newsData.status) {\n                formData.append('status', newsData.status);\n            }\n            \n            if (newsData.published_date) {\n                formData.append('published_date', newsData.published_date);\n            }\n            \n            if (newsData.image) {\n                formData.append('image', newsData.image);\n            }\n\n            const token = localStorage.getItem('token');\n            const response = await fetch(`${API_BASE_URL}/api/news`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                },\n                body: formData\n            });\n\n            if (!response.ok) {\n                const error = await response.json();\n                throw new Error(error.error || 'Failed to create news');\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('Error creating news:', error);\n            throw error;\n        }\n    },\n\n    // Admin - Update news with image\n    updateNews: async (id, newsData) => {\n        try {\n            const formData = new FormData();\n            formData.append('title', newsData.title);\n            formData.append('content', newsData.content);\n            \n            if (newsData.excerpt) {\n                formData.append('excerpt', newsData.excerpt);\n            }\n            \n            if (newsData.category) {\n                formData.append('category', newsData.category);\n            }\n            \n            if (newsData.display_order !== undefined) {\n                formData.append('display_order', newsData.display_order);\n            }\n            \n            if (newsData.status) {\n                formData.append('status', newsData.status);\n            }\n            \n            if (newsData.published_date) {\n                formData.append('published_date', newsData.published_date);\n            }\n            \n            if (newsData.image) {\n                formData.append('image', newsData.image);\n            }\n\n            const token = localStorage.getItem('token');\n            const response = await fetch(`${API_BASE_URL}/api/news/${id}`, {\n                method: 'PUT',\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                },\n                body: formData\n            });\n\n            if (!response.ok) {\n                const error = await response.json();\n                throw new Error(error.error || 'Failed to update news');\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('Error updating news:', error);\n            throw error;\n        }\n    },\n\n    // Admin - Delete news\n    deleteNews: async (id) => {\n        try {\n            const response = await api.delete(`/news/${id}`);\n            return response.data;\n        } catch (error) {\n            console.error('Error deleting news:', error);\n            throw error;\n        }\n    }\n};\n\nexport default newsService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}