{"ast":null,"code":"import api from './api';\nconst blogService = {\n  // Blog Posts\n  getAllPosts: async (filters = {}) => {\n    const response = await api.get('/blog/posts', {\n      params: filters\n    });\n    return response.data;\n  },\n  getPost: async id => {\n    const response = await api.get(`/blog/posts/${id}`);\n    return response.data;\n  },\n  getPostBySlug: async slug => {\n    const response = await api.get(`/blog/posts/slug/${slug}`);\n    return response.data;\n  },\n  createPost: async postData => {\n    const response = await api.post('/blog/posts', postData);\n    return response.data;\n  },\n  updatePost: async (id, postData) => {\n    const response = await api.put(`/blog/posts/${id}`, postData);\n    return response.data;\n  },\n  deletePost: async id => {\n    const response = await api.delete(`/blog/posts/${id}`);\n    return response.data;\n  },\n  getPopularPosts: async (limit = 5) => {\n    const response = await api.get('/blog/posts/popular', {\n      params: {\n        limit\n      }\n    });\n    return response.data;\n  },\n  getRecentPosts: async (limit = 5) => {\n    const response = await api.get('/blog/posts/recent', {\n      params: {\n        limit\n      }\n    });\n    return response.data;\n  },\n  // Categories\n  getAllCategories: async () => {\n    const response = await api.get('/blog/categories');\n    return response.data;\n  },\n  createCategory: async categoryData => {\n    const response = await api.post('/blog/categories', categoryData);\n    return response.data;\n  },\n  updateCategory: async (id, categoryData) => {\n    const response = await api.put(`/blog/categories/${id}`, categoryData);\n    return response.data;\n  },\n  deleteCategory: async id => {\n    const response = await api.delete(`/blog/categories/${id}`);\n    return response.data;\n  },\n  // Comments\n  getPostComments: async postId => {\n    const response = await api.get(`/blog/posts/${postId}/comments`);\n    return response.data;\n  },\n  createComment: async (postId, content) => {\n    const response = await api.post(`/blog/posts/${postId}/comments`, {\n      content\n    });\n    return response.data;\n  },\n  updateComment: async (id, content) => {\n    const response = await api.put(`/blog/comments/${id}`, {\n      content\n    });\n    return response.data;\n  },\n  deleteComment: async id => {\n    const response = await api.delete(`/blog/comments/${id}`);\n    return response.data;\n  }\n};\nexport default blogService;","map":{"version":3,"names":["api","blogService","getAllPosts","filters","response","get","params","data","getPost","id","getPostBySlug","slug","createPost","postData","post","updatePost","put","deletePost","delete","getPopularPosts","limit","getRecentPosts","getAllCategories","createCategory","categoryData","updateCategory","deleteCategory","getPostComments","postId","createComment","content","updateComment","deleteComment"],"sources":["D:/PROJECTS/FE/src/services/blogService.js"],"sourcesContent":["import api from './api';\n\nconst blogService = {\n    // Blog Posts\n    getAllPosts: async (filters = {}) => {\n        const response = await api.get('/blog/posts', { params: filters });\n        return response.data;\n    },\n\n    getPost: async (id) => {\n        const response = await api.get(`/blog/posts/${id}`);\n        return response.data;\n    },\n\n    getPostBySlug: async (slug) => {\n        const response = await api.get(`/blog/posts/slug/${slug}`);\n        return response.data;\n    },\n\n    createPost: async (postData) => {\n        const response = await api.post('/blog/posts', postData);\n        return response.data;\n    },\n\n    updatePost: async (id, postData) => {\n        const response = await api.put(`/blog/posts/${id}`, postData);\n        return response.data;\n    },\n\n    deletePost: async (id) => {\n        const response = await api.delete(`/blog/posts/${id}`);\n        return response.data;\n    },\n\n    getPopularPosts: async (limit = 5) => {\n        const response = await api.get('/blog/posts/popular', { params: { limit } });\n        return response.data;\n    },\n\n    getRecentPosts: async (limit = 5) => {\n        const response = await api.get('/blog/posts/recent', { params: { limit } });\n        return response.data;\n    },\n\n    // Categories\n    getAllCategories: async () => {\n        const response = await api.get('/blog/categories');\n        return response.data;\n    },\n\n    createCategory: async (categoryData) => {\n        const response = await api.post('/blog/categories', categoryData);\n        return response.data;\n    },\n\n    updateCategory: async (id, categoryData) => {\n        const response = await api.put(`/blog/categories/${id}`, categoryData);\n        return response.data;\n    },\n\n    deleteCategory: async (id) => {\n        const response = await api.delete(`/blog/categories/${id}`);\n        return response.data;\n    },\n\n    // Comments\n    getPostComments: async (postId) => {\n        const response = await api.get(`/blog/posts/${postId}/comments`);\n        return response.data;\n    },\n\n    createComment: async (postId, content) => {\n        const response = await api.post(`/blog/posts/${postId}/comments`, { content });\n        return response.data;\n    },\n\n    updateComment: async (id, content) => {\n        const response = await api.put(`/blog/comments/${id}`, { content });\n        return response.data;\n    },\n\n    deleteComment: async (id) => {\n        const response = await api.delete(`/blog/comments/${id}`);\n        return response.data;\n    }\n};\n\nexport default blogService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}