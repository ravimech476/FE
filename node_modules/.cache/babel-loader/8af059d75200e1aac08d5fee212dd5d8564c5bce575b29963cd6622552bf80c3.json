{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst eventService = {\n  // Get all events\n  getAllEvents: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/events`);\n      return {\n        success: true,\n        data: response.data.data\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to fetch events'\n      };\n    }\n  },\n  // Get upcoming events (for home page)\n  getUpcomingEvents: async (limit = 5) => {\n    try {\n      const response = await axios.get(`${API_URL}/events/upcoming?limit=${limit}`);\n      return {\n        success: true,\n        data: response.data.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to fetch upcoming events'\n      };\n    }\n  },\n  // Get single event\n  getEvent: async id => {\n    try {\n      const response = await axios.get(`${API_URL}/events/${id}`);\n      return {\n        success: true,\n        data: response.data.data\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to fetch event'\n      };\n    }\n  },\n  // Create event (admin only)\n  createEvent: async eventData => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(`${API_URL}/events`, eventData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return {\n        success: true,\n        data: response.data.data,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to create event'\n      };\n    }\n  },\n  // Update event (admin only)\n  updateEvent: async (id, eventData) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.put(`${API_URL}/events/${id}`, eventData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return {\n        success: true,\n        data: response.data.data,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      return {\n        success: false,\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Failed to update event'\n      };\n    }\n  },\n  // Delete event (admin only)\n  deleteEvent: async id => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.delete(`${API_URL}/events/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return {\n        success: true,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      return {\n        success: false,\n        error: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || 'Failed to delete event'\n      };\n    }\n  }\n};\nexport default eventService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","eventService","getAllEvents","response","get","success","data","error","_error$response","_error$response$data","getUpcomingEvents","limit","_error$response2","_error$response2$data","getEvent","id","_error$response3","_error$response3$data","createEvent","eventData","token","localStorage","getItem","post","headers","message","_error$response4","_error$response4$data","updateEvent","put","_error$response5","_error$response5$data","deleteEvent","delete","_error$response6","_error$response6$data"],"sources":["D:/PROJECTS/FE/src/services/eventService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst eventService = {\n    // Get all events\n    getAllEvents: async () => {\n        try {\n            const response = await axios.get(`${API_URL}/events`);\n            return {\n                success: true,\n                data: response.data.data\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.response?.data?.error || 'Failed to fetch events'\n            };\n        }\n    },\n\n    // Get upcoming events (for home page)\n    getUpcomingEvents: async (limit = 5) => {\n        try {\n            const response = await axios.get(`${API_URL}/events/upcoming?limit=${limit}`);\n            return {\n                success: true,\n                data: response.data.data\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.response?.data?.error || 'Failed to fetch upcoming events'\n            };\n        }\n    },\n\n    // Get single event\n    getEvent: async (id) => {\n        try {\n            const response = await axios.get(`${API_URL}/events/${id}`);\n            return {\n                success: true,\n                data: response.data.data\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.response?.data?.error || 'Failed to fetch event'\n            };\n        }\n    },\n\n    // Create event (admin only)\n    createEvent: async (eventData) => {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.post(`${API_URL}/events`, eventData, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n            return {\n                success: true,\n                data: response.data.data,\n                message: response.data.message\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.response?.data?.error || 'Failed to create event'\n            };\n        }\n    },\n\n    // Update event (admin only)\n    updateEvent: async (id, eventData) => {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.put(`${API_URL}/events/${id}`, eventData, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n            return {\n                success: true,\n                data: response.data.data,\n                message: response.data.message\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.response?.data?.error || 'Failed to update event'\n            };\n        }\n    },\n\n    // Delete event (admin only)\n    deleteEvent: async (id) => {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.delete(`${API_URL}/events/${id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            return {\n                success: true,\n                message: response.data.message\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.response?.data?.error || 'Failed to delete event'\n            };\n        }\n    }\n};\n\nexport default eventService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}