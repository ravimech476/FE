{"ast":null,"code":"import api from './api';\nconst eventService = {\n  // Get all events\n  getAllEvents: async () => {\n    try {\n      const response = await api.get('/events');\n      return {\n        success: true,\n        data: response.data.data || response.data\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to fetch events'\n      };\n    }\n  },\n  // Get upcoming events (for home page)\n  getUpcomingEvents: async (limit = 5) => {\n    try {\n      const response = await api.get(`/events/upcoming?limit=${limit}`);\n      return {\n        success: true,\n        data: response.data.data || response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error fetching upcoming events:', error);\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to fetch upcoming events'\n      };\n    }\n  },\n  // Get single event\n  getEvent: async id => {\n    try {\n      const response = await api.get(`/events/${id}`);\n      return {\n        success: true,\n        data: response.data.data || response.data\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to fetch event'\n      };\n    }\n  },\n  // Create event (admin only)\n  createEvent: async eventData => {\n    try {\n      const response = await api.post('/events', eventData);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to create event'\n      };\n    }\n  },\n  // Update event (admin only)\n  updateEvent: async (id, eventData) => {\n    try {\n      const response = await api.put(`/events/${id}`, eventData);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      return {\n        success: false,\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Failed to update event'\n      };\n    }\n  },\n  // Delete event (admin only)\n  deleteEvent: async id => {\n    try {\n      const response = await api.delete(`/events/${id}`);\n      return {\n        success: true,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      return {\n        success: false,\n        error: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || 'Failed to delete event'\n      };\n    }\n  }\n};\nexport default eventService;","map":{"version":3,"names":["api","eventService","getAllEvents","response","get","success","data","error","_error$response","_error$response$data","getUpcomingEvents","limit","_error$response2","_error$response2$data","console","getEvent","id","_error$response3","_error$response3$data","createEvent","eventData","post","message","_error$response4","_error$response4$data","updateEvent","put","_error$response5","_error$response5$data","deleteEvent","delete","_error$response6","_error$response6$data"],"sources":["D:/PROJECTS/FE/src/services/eventService.js"],"sourcesContent":["import api from './api';\n\nconst eventService = {\n    // Get all events\n    getAllEvents: async () => {\n        try {\n            const response = await api.get('/events');\n            return {\n                success: true,\n                data: response.data.data || response.data\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.response?.data?.error || 'Failed to fetch events'\n            };\n        }\n    },\n\n    // Get upcoming events (for home page)\n    getUpcomingEvents: async (limit = 5) => {\n        try {\n            const response = await api.get(`/events/upcoming?limit=${limit}`);\n            return {\n                success: true,\n                data: response.data.data || response.data\n            };\n        } catch (error) {\n            console.error('Error fetching upcoming events:', error);\n            return {\n                success: false,\n                error: error.response?.data?.error || 'Failed to fetch upcoming events'\n            };\n        }\n    },\n\n    // Get single event\n    getEvent: async (id) => {\n        try {\n            const response = await api.get(`/events/${id}`);\n            return {\n                success: true,\n                data: response.data.data || response.data\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.response?.data?.error || 'Failed to fetch event'\n            };\n        }\n    },\n\n    // Create event (admin only)\n    createEvent: async (eventData) => {\n        try {\n            const response = await api.post('/events', eventData);\n            return {\n                success: true,\n                data: response.data.data || response.data,\n                message: response.data.message\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.response?.data?.error || 'Failed to create event'\n            };\n        }\n    },\n\n    // Update event (admin only)\n    updateEvent: async (id, eventData) => {\n        try {\n            const response = await api.put(`/events/${id}`, eventData);\n            return {\n                success: true,\n                data: response.data.data || response.data,\n                message: response.data.message\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.response?.data?.error || 'Failed to update event'\n            };\n        }\n    },\n\n    // Delete event (admin only)\n    deleteEvent: async (id) => {\n        try {\n            const response = await api.delete(`/events/${id}`);\n            return {\n                success: true,\n                message: response.data.message\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.response?.data?.error || 'Failed to delete event'\n            };\n        }\n    }\n};\n\nexport default eventService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}